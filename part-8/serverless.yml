service: serverless-workshop-part-1

plugins:
  - serverless-s3-sync
provider:
  name: aws
  runtime: ruby2.5

  stage: dev
  region: eu-central-1

  tracing:
    lambda: true

  iamRoleStatements:
    - Effect: Allow
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:GetItem
      Resource:
        - { 'Fn::Join': [':', ['arn:aws:dynamodb:eu-central-1:', { Ref: 'AWSAccountId' }, ':table/weatherTable']] }
        - arn:aws:dynamodb:eu-west-1:818127503771:table/weatherTable
        - arn:aws:dynamodb:eu-west-1:818127503771:table/pubg-matches-v4
        - arn:aws:dynamodb:eu-west-1:818127503771:table/pubg-search

layers:
  gemLayer:
    path: ruby

functions:
  temperature:
    handler: handler.temperature
    layers:
      - {Ref: GemLayerLambdaLayer}
    environment:
      GEM_PATH: /opt/2.5.0
    events:
      - http:
          path: temperature
          method: get

custom:
  siteName: serverless-workshop-s3-bucket

  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: static

resources:
  Resources:
    weatherTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: weatherTable
        AttributeDefinitions:
          - AttributeName: locationId
            AttributeType: N
        KeySchema:
          - AttributeName: locationId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "StaticSite"
                    },
                    "/*"
                  ]
                ]
